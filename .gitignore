.vscode
env

# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
frontend/node_modules/
frontend/.pnp
frontend/.pnp.js

# testing
frontend/coverage

# production
frontend/build

# misc
frontend/.DS_Store
frontend/.env.local
frontend/.env.development.local
frontend/.env.test.local
frontend/.env.production.local

frontend/npm-debug.log*
frontend/yarn-debug.log*
frontend/yarn-error.log*

frontend/env/
frontend/project/__pycache__
frontend/project/.vscode

# Created by https://www.gitignore.io/api/django
# Edit at https://www.gitignore.io/?templates=django

### Django ###
*.log
*.pot
*.pyc
project/__pycache__/
project/local_settings.py
project/db.sqlite3
project/db.sqlite3-journal
project/media

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
project/staticfiles/

### Django.Python Stack ###
# Byte-compiled / optimized / DLL files
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
project/.Python
project/build/
project/develop-eggs/
project/dist/
project/downloads/
project/eggs/
project/.eggs/
project/lib/
project/lib64/
project/parts/
project/sdist/
project/var/
project/wheels/
project/pip-wheel-metadata/
project/share/python-wheels/
*.egg-info/
project/.installed.cfg
*.egg
project/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
project/pip-log.txt
project/pip-delete-this-directory.txt

# Unit test / coverage reports
project/htmlcov/
project/.tox/
project/.nox/
project/.coverage
project/.coverage.*
project/.cache
project/nosetests.xml
project/coverage.xml
*.cover
project/.hypothesis/
project/.pytest_cache/

# Translations
*.mo

# Scrapy stuff:
project/.scrapy

# Sphinx documentation
project/docs/_build/

# PyBuilder
project/target/

# pyenv
project/.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# celery beat schedule file
project/celerybeat-schedule

# SageMath parsed files
*.sage.py

# Spyder project settings
project/.spyderproject
project/.spyproject

# Rope project settings
project/.ropeproject

# Mr Developer
project/.mr.developer.cfg
project/.project
project/.pydevproject

# mkdocs documentation
project//site

# mypy
project/.mypy_cache/
project/.dmypy.json
project/dmypy.json

# Pyre type checker
project/.pyre/

# End of https://www.gitignore.io/api/django